# .tmux.conf
# nick@dischord.org

unbind C-b
set -g prefix C-a
bind-key a send-prefix

unbind % # Remove default binding since we’re replacing
bind | split-window -h
bind - split-window -v

# we like vi
set -g status-keys vi

# reduce delay time after hitting esc before letting the shell
# process the next key
set -s escape-time 0

# confirm before killing a window or the server
bind-key k confirm kill-window
bind-key K confirm kill-server

# solves copy-and-paste on osx
# see https://github.com/ChrisJohnsen/tmux-MacOSX-pasteboard
set-option -g default-command "reattach-to-user-namespace -l zsh"

# Use vim keybindings in copy mode
setw -g mode-keys vi

# Setup 'v' to begin selection as in Vim
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
unbind -t vi-copy Enter
bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

# Start window numbering at 1 instead of 0
set -g base-index 1

# toggle statusbar
bind-key b set-option status

# quick view of processes
bind '~' split-window "exec htop"

# select next tab
bind-key Tab select-pane -t :.+

# scrollback buffer n lines
set -g history-limit 5000

# listen for activity on all windows
set -g bell-action any

# on-screen time for display-panes in ms
set -g display-panes-time 2000

# enable wm window titles
set -g set-titles on

# wm window title string (uses statusbar variables)
set -g set-titles-string "#T"

# manually rename windows
bind , command-prompt "rename-window '%%'"

# have a go at guessing it yourself
bind > run-shell "tmux rename-window `basename #{pane_current_path}`"

# set the right termtype at all times
set-option -g default-terminal "screen-256color"

# present a menu of URLs to open from the visible pane. sweet.
bind-key u capture-pane \;\
    save-buffer /tmp/tmux-buffer \;\
    split-window -l 10 "urlview /tmp/tmux-buffer"

# Smart pane switching with awareness of vim splits
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# Appearance
set -g status-fg white
set -g status-bg colour234
set -g window-status-activity-attr bold
set -g pane-border-fg colour245
set -g pane-active-border-fg colour39
set -g message-fg colour16
set -g message-bg colour221
set -g message-attr bold

# Powerline symbols: ⮂ ⮃ ⮀ ⮁ ⭤
# PragmataPro:    
set -g status-left-length 32
set -g status-right-length 150
set -g status-interval 5

# Uncomment for 'Powerline-patched' fonts
#
set -g status-left '#[fg=colour16,bg=colour254,bold] #S #[fg=colour254,bg=colour238,nobold]⮀#[fg=colour15,bg=colour238,bold] #(notmuch count tag:unread and tag:inbox) #[fg=colour238,bg=colour234,nobold]⮀'

set -g status-right "#[fg=colour245]⮃ #(date -u +%%H:%%M) UTC ⮃ %d %b #[fg=colour254,bg=colour234,nobold]⮂#[fg=colour16,bg=colour254,bold] #h "

set -g window-status-format "#[fg=white,bg=colour234] #I #W "
set -g window-status-current-format "#[fg=colour234,bg=colour39]⮀#[fg=colour16,bg=colour39,noreverse,bold] #I#{?window_zoomed_flag,⁺,} #W #[fg=colour39,bg=colour234,nobold]⮀"

# Uncomment for PragmataPro
#
#set -g status-left '#[fg=colour16,bg=colour254,bold] #S #[fg=colour254,bg=colour238,nobold]#[fg=colour15,bg=colour238,bold] #(notmuch count tag:unread and tag:inbox) #[fg=colour238,bg=colour234,nobold]'
#
#set -g status-right "#[fg=colour245] #(date +%%H:%%M)  %d %b #[fg=colour254,bg=colour234,nobold]#[fg=colour16,bg=colour254,bold] #h "
#
#set -g window-status-format "#[fg=white,bg=colour234] #I #W "
#set -g window-status-current-format "#[fg=colour234,bg=colour39]#[fg=colour16,bg=colour39,noreverse,bold] #I#{?window_zoomed_flag,⁺,}  #W #[fg=colour39,bg=colour234,nobold]"
